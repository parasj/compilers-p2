<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE grammar [
  <!ELEMENT grammar (productionRule*)>
  <!ATTLIST grammar name CDATA #REQUIRED startSymbol CDATA #REQUIRED>
  <!ELEMENT productionRule (terminal|nonTerminal)*>
  <!ATTLIST productionRule headNonTerminal CDATA #REQUIRED>
  <!ELEMENT terminal EMPTY>
  <!ATTLIST terminal lexeme CDATA #REQUIRED>
  <!ELEMENT nonTerminal EMPTY>
  <!ATTLIST nonTerminal name CDATA #REQUIRED>
]>

<grammar name="tiger" startSymbol="program">
  <!-- rule: program -->
  <productionRule headNonTerminal="program">
    <terminal lexeme="let"/>
    <nonTerminal name="program" />
    <terminal lexeme="in" />
    <nonTerminal name="stmts" />
    <terminal lexeme="end" />
  </productionRule>

  <!-- rule: declseg -->
  <productionRule headNonTerminal="declseg">
    <nonTerminal name="typedecls" />
    <nonTerminal name="vardecls" />
    <nonTerminal name="funcdecls" />
  </productionRule>

  <!-- rule: typedecls -->
  <productionRule headNonTerminal="typedecls">
    <!-- a terminal with lexeme = empty string is the empty string terminal -->  
    <terminal lexeme="" />
  </productionRule>

  <productionRule headNonTerminal="typedecls">
    <nonTerminal name="typedecl" />
    <nonTerminal name="typedecls" />
  </productionRule>

  <!-- rule: typedecl -->
  <productionRule headNonTerminal="typedecl">
    <terminal lexeme="type" />
    <terminal lexeme="id" />
    <terminal lexeme=":=" />
    <nonTerminal name="type" />
    <terminal lexeme=";" />
  </productionRule>

  <!-- rule: type -->
  <productionRule headNonTerminal="type">
    <terminal lexeme="boolean" />
  </productionRule>

  <productionRule headNonTerminal="type">
    <terminal lexeme="int" />
  </productionRule>

  <productionRule headNonTerminal="type">
    <terminal lexeme="float" />
  </productionRule>

  <productionRule headNonTerminal="type">
    <terminal lexeme="unit" />
  </productionRule>

  <productionRule headNonTerminal="type">
    <terminal lexeme="id" />
  </productionRule>

  <productionRule headNonTerminal="type">
    <terminal lexeme="array" />
    <terminal lexeme="[" />
    <terminal lexeme="intlit" />
    <terminal lexeme="]" />
    <terminal lexeme="of" />
    <nonTerminal name="type" />
  </productionRule>
  
  <!-- rule: vardecls -->
  <productionRule headNonTerminal="vardecls">
    <terminal lexeme="" />
  </productionRule>

  <productionRule headNonTerminal="vardecls">
    <nonTerminal name="vardecl" />
    <nonTerminal name="vardecls" />
  </productionRule>

  <!-- rule: vardecl -->
  <productionRule headNonTerminal="vardecl">
    <terminal lexeme="var" />
    <nonTerminal name="ids" />
    <terminal lexeme=":" />
    <nonTerminal name="type" />
    <nonTerminal name="optinit" />
    <terminal lexeme=";" />
  </productionRule>

  <!-- rule: ids -->
  <productionRule headNonTerminal="ids">
    <terminal lexeme="id" />
  </productionRule>

  <productionRule headNonTerminal="ids">
    <terminal lexeme="id" />
    <terminal lexeme="," />
    <nonTerminal name="ids" />
  </productionRule>

  <!-- rule: optinit -->
  <productionRule headNonTerminal="optinit">
    <terminal lexeme="" />
  </productionRule>

  <productionRule headNonTerminal="optinit">
    <terminal lexeme=":=" />
    <nonTerminal name="const" />
  </productionRule>

  <!-- rule: funcdecls -->
  <productionRule headNonTerminal="funcdecls">
    <terminal lexeme="" />
  </productionRule>

  <productionRule headNonTerminal="funcdecls">
    <terminal lexeme="func" />
    <terminal lexeme="id" />
    <terminal lexeme="(" />
    <nonTerminal name="params" />
    <terminal lexeme=")" />
    <terminal lexeme=":" />
    <nonTerminal name="type" />
    <terminal lexeme="begin" />
    <nonTerminal name="stmts" />
    <terminal lexeme="end" />
    <terminal lexeme=";" />
  </productionRule>

  <!-- rule: params -->
  <productionRule headNonTerminal="params">
    <terminal lexeme="" />
  </productionRule>

  <productionRule headNonTerminal="params">
    <nonTerminal name="neparams" />
  </productionRule>

  <!-- rule: neparams -->
  <productionRule headNonTerminal="neparams">
    <nonTerminal name="param" />
  </productionRule>

  <productionRule headNonTerminal="neparams">
    <nonTerminal name="param" />
    <terminal lexeme="," />
    <nonTerminal name="neparams" />
  </productionRule>

  <!-- rule: param -->
  <productionRule headNonTerminal="param">
    <terminal lexeme="id" />
    <terminal lexeme=":" />
    <nonTerminal name="type" />
  </productionRule>

  <!-- rule: stmts -->
  <productionRule headNonTerminal="stmts">
    <nonTerminal name="fullstmt" />
  </productionRule>

  <productionRule headNonTerminal="stmts">
    <nonTerminal name="fullstmt" />
    <nonTerminal name="stmts" />
  </productionRule>

  <!-- rule: fullstmt -->
  <productionRule headNonTerminal="fullstmt">
    <nonTerminal name="stmt" />
    <terminal lexeme=";" />
  </productionRule>

  <!-- rule: stmt -->
  <productionRule headNonTerminal="stmt">
    <nonTerminal name="lvalue" />
    <terminal lexeme=":=" />
    <nonTerminal name="expr" />
  </productionRule>

  <productionRule headNonTerminal="stmt">
    <terminal lexeme="if" />
    <nonTerminal name="expr" />
    <terminal lexeme="then" />
    <nonTerminal name="stmts" />
    <terminal lexeme="endif" />
  </productionRule>

  <productionRule headNonTerminal="stmt">
    <terminal lexeme="if" />
    <nonTerminal name="expr" />
    <terminal lexeme="then" />
    <nonTerminal name="stmts" />
    <terminal lexeme="else" />
    <nonTerminal name="stmts" />
    <terminal lexeme="endif" />
  </productionRule>

  <productionRule headNonTerminal="stmt">
    <terminal lexeme="while" />
    <nonTerminal name="expr" />
    <terminal lexeme="do" />
    <nonTerminal name="stmts" />
    <terminal lexeme="enddo" />
  </productionRule>

  <productionRule headNonTerminal="stmt">
    <terminal lexeme="for" />
    <terminal lexeme="id" />
    <terminal lexeme=":=" />
    <nonTerminal name="expr" />
    <terminal lexeme="to" />
    <nonTerminal name="expr" />
    <terminal lexeme="do" />
    <nonTerminal name="stmts" />
    <terminal lexeme="enddo" />
  </productionRule>

  <productionRule headNonTerminal="stmt">
    <terminal lexeme="break" />
  </productionRule>

  <productionRule headNonTerminal="stmt">
    <terminal lexeme="return" />
    <nonTerminal name="expr" />
  </productionRule>

  <!-- rule: lvalue -->
  <productionRule headNonTerminal="lvalue">
    <terminal lexeme="id" />
    <nonTerminal name="optoffset" />
  </productionRule>

  <!-- rule: optoffset -->
  <productionRule headNonTerminal="optoffset">
    <terminal lexeme="" />
  </productionRule>

  <productionRule headNonTerminal="optoffset">
    <terminal lexeme="[" />
    <nonTerminal name="expr" />
    <terminal lexeme="]" />
  </productionRule>

  <!-- rule: exprs -->
  <productionRule headNonTerminal="exprs">
    <terminal lexeme="" />
  </productionRule>

  <productionRule headNonTerminal="exprs">
    <nonTerminal name="neexprs" />
  </productionRule>

  <!-- rule: neexprs -->
  <productionRule headNonTerminal="neexprs">
    <nonTerminal name="expr" />
  </productionRule>

  <productionRule headNonTerminal="neexprs">
    <nonTerminal name="expr" />
    <terminal lexeme="," />
    <nonTerminal name="neexprs" />
  </productionRule>

  <!-- rule: expr -->
  <productionRule headNonTerminal="expr">
    <nonTerminal name="clause" />
  </productionRule>

  <productionRule headNonTerminal="expr">
    <nonTerminal name="expr" />
    <terminal lexeme="|" />
    <nonTerminal name="clause" />
  </productionRule>

  <!-- rule: clause -->
  <productionRule headNonTerminal="clause">
    <nonTerminal name="pred" />
  </productionRule>

  <productionRule headNonTerminal="clause">
    <nonTerminal name="clause" />
    <terminal lexeme="&amp;" />
    <nonTerminal name="pred" />
  </productionRule>

  <!-- rule: pred -->
  <productionRule headNonTerminal="pred">
    <nonTerminal name="expr" />
  </productionRule>

  <productionRule headNonTerminal="pred">
    <nonTerminal name="expr" />
    <nonTerminal name="boolop" />
    <nonTerminal name="expr" />
  </productionRule>

  <!-- rule: boolop -->
  <productionRule headNonTerminal="boolop">
    <terminal lexeme="=" />
  </productionRule>

  <productionRule headNonTerminal="boolop">
    <terminal lexeme="&lt;&gt;" />
  </productionRule>

  <productionRule headNonTerminal="boolop">
    <terminal lexeme="&lt;=" />
  </productionRule>

  <productionRule headNonTerminal="boolop">
    <terminal lexeme="&gt;=" />
  </productionRule>

  <productionRule headNonTerminal="boolop">
    <terminal lexeme="&lt;" />
  </productionRule>

  <productionRule headNonTerminal="boolop">
    <terminal lexeme="&gt;" />
  </productionRule>

  <!-- rule: expr (again) -->
  <productionRule headNonTerminal="expr">
    <nonTerminal name="term" />
  </productionRule>

  <productionRule headNonTerminal="expr">
    <nonTerminal name="expr" />
    <nonTerminal name="linop" />
    <nonTerminal name="term" />
  </productionRule>

  <!-- rule: linop -->
  <productionRule headNonTerminal="linop">
    <terminal lexeme="+" />
  </productionRule>

  <productionRule headNonTerminal="linop">
    <terminal lexeme="-" />
  </productionRule>

  <!-- rule: term -->
  <productionRule headNonTerminal="term">
    <nonTerminal name="factor" />
  </productionRule>

  <productionRule headNonTerminal="term">
    <nonTerminal name="term" />
    <nonTerminal name="nonlinop" />
    <nonTerminal name="factor" />
  </productionRule>

  <!-- rule: nonlinop -->
  <productionRule headNonTerminal="nonlinop">
    <terminal lexeme="*" />
  </productionRule>

  <productionRule headNonTerminal="nonlinop">
    <terminal lexeme="/" />
  </productionRule>

  <!-- rule: factor -->
  <productionRule headNonTerminal="factor">
    <nonTerminal name="const" />
  </productionRule>

  <productionRule headNonTerminal="factor">
    <terminal lexeme="id" />
  </productionRule>
  
  <productionRule headNonTerminal="factor">
    <terminal lexeme="id" />
    <terminal lexeme="[" />
    <nonTerminal name="expr" />
    <terminal lexeme="]" />
  </productionRule>

  <productionRule headNonTerminal="factor">
    <terminal lexeme="id" />
    <terminal lexeme="(" />
    <nonTerminal name="exprs" />
    <terminal lexeme=")" />
  </productionRule>

  <productionRule headNonTerminal="factor">
    <terminal lexeme="(" />
    <nonTerminal name="expr" />
    <terminal lexeme=")" />
  </productionRule>

  <!-- rule: const -->
  <productionRule headNonTerminal="const">
    <terminal lexeme="intlit" />
  </productionRule>

  <productionRule headNonTerminal="const">
    <terminal lexeme="floatlit" />
  </productionRule>

  <productionRule headNonTerminal="const">
    <terminal lexeme="_" />
  </productionRule>
</grammar>