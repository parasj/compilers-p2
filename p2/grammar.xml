<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE Grammar [
  <!ELEMENT Grammar (ProductionRule*)>
  <!ATTLIST Grammar name CDATA #REQUIRED startSymbol CDATA #REQUIRED>
  <!ELEMENT ProductionRule (Terminal|NonTerminal)*>
  <!ATTLIST ProductionRule headNonTerminal CDATA #REQUIRED>
  <!ELEMENT Terminal EMPTY>
  <!ATTLIST Terminal lexeme CDATA #REQUIRED>
  <!ELEMENT NonTerminal EMPTY>
  <!ATTLIST NonTerminal name CDATA #REQUIRED>
]>

<Grammar name="tiger" startSymbol="program">
  <!-- rule: program -->
  <ProductionRule headNonTerminal="program">
    <Terminal lexeme="let"/>
    <NonTerminal name="program" />
    <Terminal lexeme="in" />
    <NonTerminal name="stmts" />
    <Terminal lexeme="end" />
  </ProductionRule>

  <!-- rule: declseg -->
  <ProductionRule headNonTerminal="declseg">
    <NonTerminal name="typedecls" />
    <NonTerminal name="vardecls" />
    <NonTerminal name="funcdecls" />
  </ProductionRule>

  <!-- rule: typedecls -->
  <ProductionRule headNonTerminal="typedecls">
    <!-- a terminal with lexeme = empty string is the empty string terminal -->
    <Terminal lexeme="" />
  </ProductionRule>

  <ProductionRule headNonTerminal="typedecls">
    <NonTerminal name="typedecl" />
    <NonTerminal name="typedecls" />
  </ProductionRule>

  <!-- rule: typedecl -->
  <ProductionRule headNonTerminal="typedecl">
    <Terminal lexeme="type" />
    <Terminal lexeme="id" />
    <Terminal lexeme=":=" />
    <NonTerminal name="type" />
    <Terminal lexeme=";" />
  </ProductionRule>

  <!-- rule: type -->
  <ProductionRule headNonTerminal="type">
    <Terminal lexeme="boolean" />
  </ProductionRule>

  <ProductionRule headNonTerminal="type">
    <Terminal lexeme="int" />
  </ProductionRule>

  <ProductionRule headNonTerminal="type">
    <Terminal lexeme="float" />
  </ProductionRule>

  <ProductionRule headNonTerminal="type">
    <Terminal lexeme="unit" />
  </ProductionRule>

  <ProductionRule headNonTerminal="type">
    <Terminal lexeme="id" />
  </ProductionRule>

  <ProductionRule headNonTerminal="type">
    <Terminal lexeme="array" />
    <Terminal lexeme="[" />
    <Terminal lexeme="intlit" />
    <Terminal lexeme="]" />
    <Terminal lexeme="of" />
    <NonTerminal name="type" />
  </ProductionRule>
  
  <!-- rule: vardecls -->
  <ProductionRule headNonTerminal="vardecls">
    <Terminal lexeme="" />
  </ProductionRule>

  <ProductionRule headNonTerminal="vardecls">
    <NonTerminal name="vardecl" />
    <NonTerminal name="vardecls" />
  </ProductionRule>

  <!-- rule: vardecl -->
  <ProductionRule headNonTerminal="vardecl">
    <Terminal lexeme="var" />
    <NonTerminal name="ids" />
    <Terminal lexeme=":" />
    <NonTerminal name="type" />
    <NonTerminal name="optinit" />
    <Terminal lexeme=";" />
  </ProductionRule>

  <!-- rule: ids -->
  <ProductionRule headNonTerminal="ids">
    <Terminal lexeme="id" />
  </ProductionRule>

  <ProductionRule headNonTerminal="ids">
    <Terminal lexeme="id" />
    <Terminal lexeme="," />
    <NonTerminal name="ids" />
  </ProductionRule>

  <!-- rule: optinit -->
  <ProductionRule headNonTerminal="optinit">
    <Terminal lexeme="" />
  </ProductionRule>

  <ProductionRule headNonTerminal="optinit">
    <Terminal lexeme=":=" />
    <NonTerminal name="const" />
  </ProductionRule>

  <!-- rule: funcdecls -->
  <ProductionRule headNonTerminal="funcdecls">
    <Terminal lexeme="" />
  </ProductionRule>

  <ProductionRule headNonTerminal="funcdecls">
    <NonTerminal name="funcdecl" />
    <NonTerminal name="funcdecls" />
  </ProductionRule>

  <!-- rule: funcdecl -->
  <ProductionRule headNonTerminal="funcdecl">
    <Terminal lexeme="func" />
    <Terminal lexeme="id" />
    <Terminal lexeme="(" />
    <NonTerminal name="params" />
    <Terminal lexeme=")" />
    <Terminal lexeme=":" />
    <NonTerminal name="type" />
    <Terminal lexeme="begin" />
    <NonTerminal name="stmts" />
    <Terminal lexeme="end" />
    <Terminal lexeme=";" />
  </ProductionRule>

  <!-- rule: params -->
  <ProductionRule headNonTerminal="params">
    <Terminal lexeme="" />
  </ProductionRule>

  <ProductionRule headNonTerminal="params">
    <NonTerminal name="neparams" />
  </ProductionRule>

  <!-- rule: neparams -->
  <ProductionRule headNonTerminal="neparams">
    <NonTerminal name="param" />
  </ProductionRule>

  <ProductionRule headNonTerminal="neparams">
    <NonTerminal name="param" />
    <Terminal lexeme="," />
    <NonTerminal name="neparams" />
  </ProductionRule>

  <!-- rule: param -->
  <ProductionRule headNonTerminal="param">
    <Terminal lexeme="id" />
    <Terminal lexeme=":" />
    <NonTerminal name="type" />
  </ProductionRule>

  <!-- rule: stmts -->
  <ProductionRule headNonTerminal="stmts">
    <NonTerminal name="fullstmt" />
  </ProductionRule>

  <ProductionRule headNonTerminal="stmts">
    <NonTerminal name="fullstmt" />
    <NonTerminal name="stmts" />
  </ProductionRule>

  <!-- rule: fullstmt -->
  <ProductionRule headNonTerminal="fullstmt">
    <NonTerminal name="stmt" />
    <Terminal lexeme=";" />
  </ProductionRule>

  <!-- rule: stmt -->
  <ProductionRule headNonTerminal="stmt">
    <NonTerminal name="lvalue" />
    <Terminal lexeme=":=" />
    <NonTerminal name="expr" />
  </ProductionRule>

  <ProductionRule headNonTerminal="stmt">
    <Terminal lexeme="if" />
    <NonTerminal name="expr" />
    <Terminal lexeme="then" />
    <NonTerminal name="stmts" />
    <Terminal lexeme="endif" />
  </ProductionRule>

  <ProductionRule headNonTerminal="stmt">
    <Terminal lexeme="if" />
    <NonTerminal name="expr" />
    <Terminal lexeme="then" />
    <NonTerminal name="stmts" />
    <Terminal lexeme="else" />
    <NonTerminal name="stmts" />
    <Terminal lexeme="endif" />
  </ProductionRule>

  <ProductionRule headNonTerminal="stmt">
    <Terminal lexeme="while" />
    <NonTerminal name="expr" />
    <Terminal lexeme="do" />
    <NonTerminal name="stmts" />
    <Terminal lexeme="enddo" />
  </ProductionRule>

  <ProductionRule headNonTerminal="stmt">
    <Terminal lexeme="for" />
    <Terminal lexeme="id" />
    <Terminal lexeme=":=" />
    <NonTerminal name="expr" />
    <Terminal lexeme="to" />
    <NonTerminal name="expr" />
    <Terminal lexeme="do" />
    <NonTerminal name="stmts" />
    <Terminal lexeme="enddo" />
  </ProductionRule>

  <ProductionRule headNonTerminal="stmt">
    <Terminal lexeme="break" />
  </ProductionRule>

  <ProductionRule headNonTerminal="stmt">
    <Terminal lexeme="return" />
    <NonTerminal name="expr" />
  </ProductionRule>

  <!-- rule: lvalue -->
  <ProductionRule headNonTerminal="lvalue">
    <Terminal lexeme="id" />
    <NonTerminal name="optoffset" />
  </ProductionRule>

  <!-- rule: optoffset -->
  <ProductionRule headNonTerminal="optoffset">
    <Terminal lexeme="" />
  </ProductionRule>

  <ProductionRule headNonTerminal="optoffset">
    <Terminal lexeme="[" />
    <NonTerminal name="expr" />
    <Terminal lexeme="]" />
  </ProductionRule>

  <!-- rule: exprs -->
  <ProductionRule headNonTerminal="exprs">
    <Terminal lexeme="" />
  </ProductionRule>

  <ProductionRule headNonTerminal="exprs">
    <NonTerminal name="neexprs" />
  </ProductionRule>

  <!-- rule: neexprs -->
  <ProductionRule headNonTerminal="neexprs">
    <NonTerminal name="expr" />
  </ProductionRule>

  <ProductionRule headNonTerminal="neexprs">
    <NonTerminal name="expr" />
    <Terminal lexeme="," />
    <NonTerminal name="neexprs" />
  </ProductionRule>

  <!-- rule: expr -->
  <ProductionRule headNonTerminal="expr">
    <NonTerminal name="clause" />
  </ProductionRule>

  <ProductionRule headNonTerminal="expr">
    <NonTerminal name="expr" />
    <Terminal lexeme="|" />
    <NonTerminal name="clause" />
  </ProductionRule>

  <!-- rule: clause -->
  <ProductionRule headNonTerminal="clause">
    <NonTerminal name="pred" />
  </ProductionRule>

  <ProductionRule headNonTerminal="clause">
    <NonTerminal name="clause" />
    <Terminal lexeme="&amp;" />
    <NonTerminal name="pred" />
  </ProductionRule>

  <!-- rule: pred -->
  <ProductionRule headNonTerminal="pred">
    <NonTerminal name="expr" />
  </ProductionRule>

  <ProductionRule headNonTerminal="pred">
    <NonTerminal name="expr" />
    <NonTerminal name="boolop" />
    <NonTerminal name="expr" />
  </ProductionRule>

  <!-- rule: boolop -->
  <ProductionRule headNonTerminal="boolop">
    <Terminal lexeme="=" />
  </ProductionRule>

  <ProductionRule headNonTerminal="boolop">
    <Terminal lexeme="&lt;&gt;" />
  </ProductionRule>

  <ProductionRule headNonTerminal="boolop">
    <Terminal lexeme="&lt;=" />
  </ProductionRule>

  <ProductionRule headNonTerminal="boolop">
    <Terminal lexeme="&gt;=" />
  </ProductionRule>

  <ProductionRule headNonTerminal="boolop">
    <Terminal lexeme="&lt;" />
  </ProductionRule>

  <ProductionRule headNonTerminal="boolop">
    <Terminal lexeme="&gt;" />
  </ProductionRule>

  <!-- rule: expr (again) -->
  <ProductionRule headNonTerminal="expr">
    <NonTerminal name="term" />
  </ProductionRule>

  <ProductionRule headNonTerminal="expr">
    <NonTerminal name="expr" />
    <NonTerminal name="linop" />
    <NonTerminal name="term" />
  </ProductionRule>

  <!-- rule: linop -->
  <ProductionRule headNonTerminal="linop">
    <Terminal lexeme="+" />
  </ProductionRule>

  <ProductionRule headNonTerminal="linop">
    <Terminal lexeme="-" />
  </ProductionRule>

  <!-- rule: term -->
  <ProductionRule headNonTerminal="term">
    <NonTerminal name="factor" />
  </ProductionRule>

  <ProductionRule headNonTerminal="term">
    <NonTerminal name="term" />
    <NonTerminal name="nonlinop" />
    <NonTerminal name="factor" />
  </ProductionRule>

  <!-- rule: nonlinop -->
  <ProductionRule headNonTerminal="nonlinop">
    <Terminal lexeme="*" />
  </ProductionRule>

  <ProductionRule headNonTerminal="nonlinop">
    <Terminal lexeme="/" />
  </ProductionRule>

  <!-- rule: factor -->
  <ProductionRule headNonTerminal="factor">
    <NonTerminal name="const" />
  </ProductionRule>

  <ProductionRule headNonTerminal="factor">
    <Terminal lexeme="id" />
  </ProductionRule>
  
  <ProductionRule headNonTerminal="factor">
    <Terminal lexeme="id" />
    <Terminal lexeme="[" />
    <NonTerminal name="expr" />
    <Terminal lexeme="]" />
  </ProductionRule>

  <ProductionRule headNonTerminal="factor">
    <Terminal lexeme="id" />
    <Terminal lexeme="(" />
    <NonTerminal name="exprs" />
    <Terminal lexeme=")" />
  </ProductionRule>

  <ProductionRule headNonTerminal="factor">
    <Terminal lexeme="(" />
    <NonTerminal name="expr" />
    <Terminal lexeme=")" />
  </ProductionRule>

  <!-- rule: const -->
  <ProductionRule headNonTerminal="const">
    <Terminal lexeme="intlit" />
  </ProductionRule>

  <ProductionRule headNonTerminal="const">
    <Terminal lexeme="floatlit" />
  </ProductionRule>

  <ProductionRule headNonTerminal="const">
    <Terminal lexeme="_" />
  </ProductionRule>
</Grammar>