(program let (declseg typedecls (vardecls (vardecl var (ids u) : (type unit) optinit ;) (vardecls (vardecl var (ids m) : (type int) (optinit := (const 5)) ;) vardecls)) (funcdecls (funcdecl func fact ( (params (neparams (param n : (type int)))) ) : (type int) begin (stmts (fullstmt (stmt return (expr (clause (pred (aexpr (term (term (factor n)) (nonlinop *) (factor (const 2)))))))) ;)) end ;) funcdecls)) in (stmts (fullstmt (stmt (lvalue m optoffset) := (expr (clause (pred (aexpr (term (factor fact ( (exprs (neexprs (expr (clause (pred (aexpr (term (factor m)))))))) )))))))) ;) (stmts (fullstmt (stmt (lvalue u optoffset) := (expr (clause (pred (aexpr (term (factor printi ( (exprs (neexprs (expr (clause (pred (aexpr (term (factor m)))))))) )))))))) ;))) end)