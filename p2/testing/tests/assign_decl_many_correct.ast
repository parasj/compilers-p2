(program let (declseg typedecls (vardecls (vardecl var (ids a , (ids b , (ids c , (ids d , (ids e , (ids f , (ids g , (ids h , (ids cat))))))))) : (type int) optinit ;) (vardecls (vardecl var (ids i , (ids j , (ids k , (ids l , (ids m , (ids n , (ids o , (ids p)))))))) : (type float) optinit ;) vardecls)) funcdecls) in (stmts (fullstmt (stmt (lvalue a optoffset) := (expr (clause (pred (aexpr (term (factor (const 1)))))))) ;) (stmts (fullstmt (stmt (lvalue cat optoffset) := (expr (clause (pred (aexpr (term (factor a))))))) ;) (stmts (fullstmt (stmt (lvalue cat optoffset) := (expr (clause (pred (aexpr (term (factor b))))))) ;) (stmts (fullstmt (stmt (lvalue cat optoffset) := (expr (clause (pred (aexpr (term (factor c))))))) ;) (stmts (fullstmt (stmt (lvalue cat optoffset) := (expr (clause (pred (aexpr (term (factor d))))))) ;) (stmts (fullstmt (stmt (lvalue cat optoffset) := (expr (clause (pred (aexpr (term (factor e))))))) ;) (stmts (fullstmt (stmt (lvalue cat optoffset) := (expr (clause (pred (aexpr (term (factor f))))))) ;) (stmts (fullstmt (stmt (lvalue cat optoffset) := (expr (clause (pred (aexpr (term (factor g))))))) ;) (stmts (fullstmt (stmt (lvalue cat optoffset) := (expr (clause (pred (aexpr (term (factor h))))))) ;)))))))))) end)