(program let (declseg (typedecls (typedecl type int_arr := (type array [ 100 ] of (type int)) ;) typedecls) (vardecls (vardecl var (ids a) : (type int_arr) (optinit := (const 0)) ;) (vardecls (vardecl var (ids u) : (type unit) optinit ;) vardecls)) funcdecls) in (stmts (fullstmt (stmt for i := (expr (clause (pred (aexpr (term (factor (const 2))))))) to (expr (clause (pred (aexpr (term (factor (const 100))))))) do (stmts (fullstmt (stmt (lvalue a (optoffset [ (expr (clause (pred (aexpr (term (factor i)))))) ])) := (expr (clause (pred (aexpr (aexpr (term (factor a [ (expr (clause (pred (aexpr (term (factor i)))))) ]))) (linop +) (term (factor a [ (expr (clause (pred (aexpr (aexpr (term (factor i))) (linop -) (term (factor (const 1))))))) ]))))))) ;) (stmts (fullstmt (stmt (lvalue u optoffset) := (expr (clause (pred (aexpr (term (factor printi ( (exprs (neexprs (expr (clause (pred (aexpr (term (factor a [ (expr (clause (pred (aexpr (term (factor i)))))) ])))))))) )))))))) ;))) enddo) ;)) end)