(program let (declseg typedecls (vardecls (vardecl var (ids u) : (type unit) optinit ;) (vardecls (vardecl var (ids m) : (type int) (optinit := (const 5)) ;) vardecls)) (funcdecls (funcdecl func print ( (params (neparams (param n : (type int)))) ) : (type unit) begin (stmts (fullstmt (stmt if (expr (clause (pred (aexpr (term (factor n))) (cmp <>) (aexpr (term (factor (const 1))))))) then (stmts (fullstmt (stmt (lvalue u optoffset) := (expr (clause (pred (aexpr (term (factor print ( (exprs (neexprs (expr (clause (pred (aexpr (aexpr (term (factor n))) (linop -) (term (factor (const 1))))))))) )))))))) ;) (stmts (fullstmt (stmt (lvalue u optoffset) := (expr (clause (pred (aexpr (term (factor printi ( (exprs (neexprs (expr (clause (pred (aexpr (term (factor n)))))))) )))))))) ;))) else (stmts (fullstmt (stmt (lvalue u optoffset) := (expr (clause (pred (aexpr (term (factor printi ( (exprs (neexprs (expr (clause (pred (aexpr (term (factor n)))))))) )))))))) ;)) endif) ;)) end ;) funcdecls)) in (stmts (fullstmt (stmt (lvalue u optoffset) := (expr (clause (pred (aexpr (term (factor print ( (exprs (neexprs (expr (clause (pred (aexpr (term (factor m)))))))) )))))))) ;)) end)