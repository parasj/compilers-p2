(program let (declseg typedecls (vardecls (vardecl var (ids u) : (type unit) optinit ;) (vardecls (vardecl var (ids a , (ids b)) : (type int) (optinit := (const 7)) ;) vardecls)) funcdecls) in (stmts (fullstmt (stmt (lvalue a optoffset) := (expr (clause (pred (aexpr (term (factor (const 1)))))))) ;) (stmts (fullstmt (stmt while (expr (clause (pred (aexpr (term (factor a))) (cmp <) (aexpr (term (factor (const 100))))))) do (stmts (fullstmt (stmt (lvalue a optoffset) := (expr (clause (pred (aexpr (aexpr (term (factor a))) (linop +) (term (factor b))))))) ;)) enddo) ;) (stmts (fullstmt (stmt (lvalue u optoffset) := (expr (clause (pred (aexpr (term (factor printi ( (exprs (neexprs (expr (clause (pred (aexpr (term (factor a)))))))) )))))))) ;)))) end)