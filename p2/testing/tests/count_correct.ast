(program let (declseg typedecls (vardecls (vardecl var (ids count) : (type int) (optinit := (const 10)) ;) (vardecls (vardecl var (ids i) : (type int) optinit ;) (vardecls (vardecl var (ids dummy) : (type int) optinit ;) (vardecls (vardecl var (ids u) : (type unit) optinit ;) vardecls)))) funcdecls) in (stmts (fullstmt (stmt (lvalue dummy optoffset) := (expr (clause (pred (aexpr (term (factor dummy))))))) ;) (stmts (fullstmt (stmt for i := (expr (clause (pred (aexpr (term (factor (const 1))))))) to (expr (clause (pred (aexpr (aexpr (term (factor count))) (linop +) (term (factor (const 1))))))) do (stmts (fullstmt (stmt (lvalue u optoffset) := (expr (clause (pred (aexpr (term (factor printi ( (exprs (neexprs (expr (clause (pred (aexpr (term (factor i)))))))) )))))))) ;)) enddo) ;) (stmts (fullstmt (stmt (lvalue dummy optoffset) := (expr (clause (pred (aexpr (term (factor dummy))))))) ;)))) end)