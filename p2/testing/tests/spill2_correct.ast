(program let (declseg typedecls (vardecls (vardecl var (ids u) : (type unit) optinit ;) (vardecls (vardecl var (ids x1 , (ids x2 , (ids x3 , (ids x4)))) : (type int) (optinit := (const 0)) ;) (vardecls (vardecl var (ids y) : (type int) (optinit := (const 0)) ;) vardecls))) funcdecls) in (stmts (fullstmt (stmt (lvalue y optoffset) := (expr (clause (pred (aexpr (aexpr (aexpr (aexpr (term (factor x1))) (linop +) (term (factor x2))) (linop +) (term (factor x3))) (linop +) (term (factor x4))))))) ;) (stmts (fullstmt (stmt (lvalue u optoffset) := (expr (clause (pred (aexpr (term (factor printi ( (exprs (neexprs (expr (clause (pred (aexpr (term (factor x1)))))))) )))))))) ;) (stmts (fullstmt (stmt (lvalue u optoffset) := (expr (clause (pred (aexpr (term (factor printi ( (exprs (neexprs (expr (clause (pred (aexpr (term (factor x2)))))))) )))))))) ;) (stmts (fullstmt (stmt (lvalue u optoffset) := (expr (clause (pred (aexpr (term (factor printi ( (exprs (neexprs (expr (clause (pred (aexpr (term (factor x3)))))))) )))))))) ;) (stmts (fullstmt (stmt (lvalue u optoffset) := (expr (clause (pred (aexpr (term (factor printi ( (exprs (neexprs (expr (clause (pred (aexpr (term (factor x4)))))))) )))))))) ;)))))) end)